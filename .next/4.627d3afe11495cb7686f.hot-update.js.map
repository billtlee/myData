{"version":3,"file":"4.627d3afe11495cb7686f.hot-update.js","sources":["webpack:///pages/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Table, Button, Message, Input } from 'semantic-ui-react';\nimport * as superagent from 'superagent';\n\nimport factory from '../ethereum/factory';\nimport MyData from '../ethereum/myData';\nimport web3 from '../ethereum/web3';\nimport Layout from '../components/Layout';\nimport { Link } from '../routes';\n\nclass MyDataIndex extends Component {\n  state = {\n    value: '',\n    matched: [],\n    registeredAccounts: [],\n    loading: false,\n    error: ''\n  }\n\n  async componentDidMount() {\n    const registeredAccounts = await factory.methods.getRegisteredAccounts().call();\n\n    let registeredAccountsCost = [];\n    let displayState = [];\n\n    for (var i=0, len=registeredAccounts.length; i<len; i++) {\n      const minPayment = web3.utils.fromWei(await MyData(registeredAccounts[i]).methods.minimumPayment().call());\n      registeredAccountsCost[i]=minPayment;\n      displayState[i]=false;\n    }\n\n    this.setState({\n      registeredAccounts,\n      registeredAccountsCost,\n      displayState\n    });\n  }\n\n  onMatch = async () => {\n    // let str=this.state.value.split(/[ ,]+/);\n    // const reg = new RegExp('[^\\s\\\"\\']+|\\\"([^\\\"]*)\\\"|\\'([^\\']*)\\'');\n    let str=this.state.value.split('[^/\\s\\\"\\']+|\\\"([^\\\"]*)\\\"|\\'([^\\']*)\\'');\n    console.log(str);\n    let tempMatched=[]\n    let foundAddresses=new Set();\n    for (let i=0; i<str.length; i++){\n      const res = await superagent.get(`http://${window.location.host}/api/findAddressByInterest/${str[i]}`)\n        .then(res => res.body);\n      for (let j=0; j<res.length; j++){\n        foundAddresses.add(res[j].contractAddress);\n      }\n      const res1 = await superagent.get(`http://${window.location.host}/api/findAddressByBrands/${str[i]}`)\n      .then(res => res.body);\n      for (let j=0; j<res1.length; j++){\n        foundAddresses.add(res1[j].contractAddress);\n      }\n      const res2 = await superagent.get(`http://${window.location.host}/api/findAddressByMedicalCondition/${str[i]}`)\n      .then(res => res.body);\n      for (let j=0; j<res2.length; j++){\n        foundAddresses.add(res2[j].contractAddress);\n      }\n    }\n    console.log(\"foundAddresses: \", foundAddresses);\n    \n    for (let i=0; i<this.state.registeredAccounts.length; i++){\n      (foundAddresses.has(this.state.registeredAccounts[i])) && (tempMatched[i]=true);\n    }\n\n    this.setState({matched: tempMatched});\n  }\n\n  onGetAccess = async (address) => {\n    const myData = MyData(address);\n    \n    const accounts = await web3.eth.getAccounts();\n    const owner = await myData.methods.owner().call();\n    if (accounts[0]!==owner){\n      this.setState({ loading: true, errorMessage: '' });\n      const minPrice = await myData.methods.minimumPayment().call();\n      console.log('not owner', minPrice);\n      try {\n        await myData.methods.getAccess().send({\n          from: accounts[0],\n          value: minPrice\n        });\n      } catch (error) {\n        this.setState({ errorMessage: error.message });\n      }\n      this.setState({ loading: false, value: '' });\n    } else {\n      console.log('owner');\n    }\n  }\n\n  renderRow() {\n    const { Row, Cell } = Table;\n    return this.state.registeredAccounts.map((address, i) => {\n        return (\n          <Row active={this.state.matched[i]} key={i}>\n            <Cell><Link route = {`/mydata/${address}/interests`}><a>{address}</a></Link></Cell>\n            <Cell>{this.state.registeredAccountsCost[i]}</Cell>\n            <Cell>\n              <Button color=\"green\" basic \n                loading={this.state.loading} \n                onClick={this.onGetAccess.bind(this, address)}\n                >Pay\n              </Button>\n            </Cell>\n            <Cell>\n              <Button color=\"teal\" basic>\n                <Link route = {`/mydata/${address}/privatedata`}><a>View</a>\n                </Link>\n              </Button>\n            </Cell>\n          </Row>\n        )\n    })\n  }\n\n  render(){\n    const { Header, Row, HeaderCell, Body } = Table;\n\n    return (\n      <Layout>\n        <h3>Registered Accounts</h3>\n        <Input \n          value={this.state.value}\n          onChange={event => this.setState({ value: event.target.value})}\n          labelPosition=\"left\"\n        />\n        <Button primary onClick={this.onMatch}>\n            Match Interests\n        </Button>\n        <Table>\n          <Header>\n            <Row>\n              <HeaderCell>Address</HeaderCell>\n              <HeaderCell>Min Price for Data (Ether)</HeaderCell>\n              <HeaderCell>Authorization</HeaderCell>\n              <HeaderCell>Private Data</HeaderCell>\n            </Row>\n          </Header>\n          <Body>\n            {this.renderRow()}\n          </Body>\n        </Table>\n      </Layout>\n    )\n  }\n}\n\nexport default MyDataIndex;\n\n\n// WEBPACK FOOTER //\n// pages/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;AACA;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;;;AA2BA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AASA;AAAA;AACA;AAVA;AAQA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;AAcA;AAAA;AACA;AAfA;AAaA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA;AAmBA;AAAA;AACA;AApBA;AAkBA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAOA;AAPA;AAAA;AACA;AADA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;AAgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AACA;AALA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AAPA;AAAA;AACA;AADA;AAOA;AACA;AARA;AAAA;AAAA;AAWA;AACA;AAFA;AACA;AAXA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAcA;AAAA;AAAA;AACA;AAhBA;AAiBA;AAAA;AAAA;AAAA;AACA;AAlBA;AAAA;AACA;AADA;AAmBA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;AApDA;AACA;;AADA;AAEA;AACA;AAEA;AACA;;AADA;;;;;AACA;;AAAA;AACA;;;AADA;AACA;AACA;AACA;;AAJA;;;;;AAMA;AACA;AACA;AACA;AAHA;AACA;;;;;;;;;;;;;;;AA8DA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;AA1IA;AACA;AA4IA;;;;;;;;;;;;;;AA7IA;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}